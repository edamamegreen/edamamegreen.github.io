{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {choice com.keminglabs.statetron.core, p com.keminglabs.statetron.macros, pp com.keminglabs.statetron.macros}, :excludes #{descendants ancestors}, :name com.keminglabs.statetron.core, :imports nil, :requires {d datascript.core, datascript.core datascript.core, set clojure.set, clojure.set clojure.set, str clojure.string, clojure.string clojure.string, tufte taoensso.tufte, taoensso.tufte taoensso.tufte}, :cljs.spec/speced-vars [], :uses nil, :defs {t {:protocol-inline nil, :meta {:file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 93, :column 7, :end-line 93, :end-column 8, :arglists (quote ([sc internal-transition-name from-state-name] [sc transition-name from-state-name to-state-name])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([sc internal-transition-name from-state-name] [sc transition-name from-state-name to-state-name]), :arglists ([sc internal-transition-name from-state-name] [sc transition-name from-state-name to-state-name]), :arglists-meta (nil nil)}}, :name com.keminglabs.statetron.core/t, :variadic false, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :end-column 8, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([sc internal-transition-name from-state-name] [sc transition-name from-state-name to-state-name]), :arglists ([sc internal-transition-name from-state-name] [sc transition-name from-state-name to-state-name]), :arglists-meta (nil nil)}, :method-params ([sc internal-transition-name from-state-name] [sc transition-name from-state-name to-state-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 93, :end-line 93, :max-fixed-arity 4, :fn-var true, :arglists ([sc internal-transition-name from-state-name] [sc transition-name from-state-name to-state-name])}, statechart {:protocol-inline nil, :meta {:file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 380, :column 7, :end-line 380, :end-column 17, :arglists (quote ([tx]))}, :name com.keminglabs.statetron.core/statechart, :variadic false, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :end-column 17, :method-params ([tx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 380, :end-line 380, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tx]))}, step {:protocol-inline nil, :meta {:file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 304, :column 7, :end-line 304, :end-column 11, :arglists (quote ([sc event] [sc event checker])), :doc "Transitions statechart according to provided `event`, returning new statechart. Runs actions.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([sc event] [sc event checker]), :arglists ([sc event] [sc event checker]), :arglists-meta (nil nil)}}, :name com.keminglabs.statetron.core/step, :variadic false, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([sc event] [sc event checker]), :arglists ([sc event] [sc event checker]), :arglists-meta (nil nil)}, :method-params ([sc event] [sc event checker]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 304, :end-line 304, :max-fixed-arity 3, :fn-var true, :arglists ([sc event] [sc event checker]), :doc "Transitions statechart according to provided `event`, returning new statechart. Runs actions."}, pseudostate? {:protocol-inline nil, :meta {:file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 412, :column 7, :end-line 412, :end-column 19, :arglists (quote ([s]))}, :name com.keminglabs.statetron.core/pseudostate?, :variadic false, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :end-column 19, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 412, :end-line 412, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, explore-states {:protocol-inline nil, :meta {:file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 442, :column 7, :end-line 442, :end-column 21, :arglists (quote ([sc possible-events] [sc possible-events max-iterations])), :doc "Explore states from `sc` using provided `possible-events` fn. Returns map of :state/name to histories leading to that state.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([sc possible-events] [sc possible-events max-iterations]), :arglists ([sc possible-events] [sc possible-events max-iterations]), :arglists-meta (nil nil)}}, :name com.keminglabs.statetron.core/explore-states, :variadic false, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :end-column 21, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([sc possible-events] [sc possible-events max-iterations]), :arglists ([sc possible-events] [sc possible-events max-iterations]), :arglists-meta (nil nil)}, :method-params ([sc possible-events] [sc possible-events max-iterations]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 442, :end-line 442, :max-fixed-arity 3, :fn-var true, :arglists ([sc possible-events] [sc possible-events max-iterations]), :doc "Explore states from `sc` using provided `possible-events` fn. Returns map of :state/name to histories leading to that state."}, graph-states {:protocol-inline nil, :meta {:file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 60, :column 8, :end-line 60, :end-column 20, :private true, :arglists (quote ([graph]))}, :private true, :name com.keminglabs.statetron.core/graph-states, :variadic false, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :end-column 20, :method-params ([graph]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 1, :fn-var true, :arglists (quote ([graph]))}, new-sc-db {:name com.keminglabs.statetron.core/new-sc-db, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 41, :column 1, :end-line 41, :end-column 25, :private true, :meta {:file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 41, :column 16, :end-line 41, :end-column 25, :private true}, :tag any}, active? {:protocol-inline nil, :meta {:file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 141, :column 7, :end-line 141, :end-column 14, :arglists (quote ([sc state-name]))}, :name com.keminglabs.statetron.core/active?, :variadic false, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :end-column 14, :method-params ([sc state-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 2, :fn-var true, :arglists (quote ([sc state-name]))}, schema {:name com.keminglabs.statetron.core/schema, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 33, :column 1, :end-line 33, :end-column 12, :meta {:file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 33, :column 6, :end-line 33, :end-column 12}, :tag cljs.core/IMap}, default-state? {:protocol-inline nil, :meta {:file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 402, :column 7, :end-line 402, :end-column 21, :arglists (quote ([s]))}, :name com.keminglabs.statetron.core/default-state?, :variadic false, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :end-column 21, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 402, :end-line 402, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, add-root-children {:protocol-inline nil, :meta {:file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 330, :column 8, :end-line 330, :end-column 25, :private true, :arglists (quote ([graph]))}, :private true, :name com.keminglabs.statetron.core/add-root-children, :variadic false, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :end-column 25, :method-params ([graph]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 330, :end-line 330, :max-fixed-arity 1, :fn-var true, :arglists (quote ([graph]))}, map->StatechartImpl {:protocol-inline nil, :meta {:file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 47, :column 22, :end-line 47, :end-column 36, :private true, :internal-ctor true, :factory :map, :arglists (quote ([G__47128]))}, :private true, :name com.keminglabs.statetron.core/map->StatechartImpl, :variadic false, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :end-column 36, :method-params ([G__47128]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 47, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__47128]))}, parent {:protocol-inline nil, :meta {:file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 81, :column 7, :end-line 81, :end-column 13, :arglists (quote ([state]))}, :name com.keminglabs.statetron.core/parent, :variadic false, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :end-column 13, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, states {:protocol-inline nil, :meta {:file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 68, :column 7, :end-line 68, :end-column 13, :arglists (quote ([sc]))}, :name com.keminglabs.statetron.core/states, :variadic false, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :end-column 13, :method-params ([sc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sc]))}, transitions {:protocol-inline nil, :meta {:file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 73, :column 7, :end-line 73, :end-column 18, :arglists (quote ([sc]))}, :name com.keminglabs.statetron.core/transitions, :variadic false, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :end-column 18, :method-params ([sc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sc]))}, least-common-ancestor {:protocol-inline nil, :meta {:file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 171, :column 8, :end-line 171, :end-column 29, :private true, :arglists (quote ([sc state-names]))}, :private true, :name com.keminglabs.statetron.core/least-common-ancestor, :variadic false, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :end-column 29, :method-params ([sc state-names]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 171, :end-line 171, :max-fixed-arity 2, :fn-var true, :arglists (quote ([sc state-names]))}, available-transitions {:protocol-inline nil, :meta {:file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 430, :column 7, :end-line 430, :end-column 28, :arglists (quote ([sc])), :doc "Possible transitions for current statechart. Note: Transitions with guards may not actually be possible."}, :name com.keminglabs.statetron.core/available-transitions, :variadic false, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :end-column 28, :method-params ([sc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 430, :end-line 430, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sc])), :doc "Possible transitions for current statechart. Note: Transitions with guards may not actually be possible."}, default-transition {:protocol-inline nil, :meta {:file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 164, :column 7, :end-line 164, :end-column 25, :arglists (quote ([state]))}, :name com.keminglabs.statetron.core/default-transition, :variadic false, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :end-column 25, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 164, :end-line 164, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, run-steps {:protocol-inline nil, :meta {:file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 182, :column 8, :end-line 182, :end-column 17, :private true, :arglists (quote ([originating-opts env event steps checker]))}, :private true, :name com.keminglabs.statetron.core/run-steps, :variadic false, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :end-column 17, :method-params ([originating-opts env event steps checker]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 182, :end-line 182, :max-fixed-arity 5, :fn-var true, :arglists (quote ([originating-opts env event steps checker]))}, step-with-intermediates {:protocol-inline nil, :meta {:file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 213, :column 7, :end-line 213, :end-column 30, :arglists (quote ([sc event] [sc event checker])), :doc "Step statechart by `event`, returning {:steps, :sc}. Optionally provide `checker` to validate env after every intermediate step. Each step is a tagged vector of the form [::enter state] [::exit state] or [::transition t].", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([sc event] [sc event checker]), :arglists ([sc event] [sc event checker]), :arglists-meta (nil nil)}}, :name com.keminglabs.statetron.core/step-with-intermediates, :variadic false, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :end-column 30, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([sc event] [sc event checker]), :arglists ([sc event] [sc event checker]), :arglists-meta (nil nil)}, :method-params ([sc event] [sc event checker]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 213, :end-line 213, :max-fixed-arity 3, :fn-var true, :arglists ([sc event] [sc event checker]), :doc "Step statechart by `event`, returning {:steps, :sc}. Optionally provide `checker` to validate env after every intermediate step. Each step is a tagged vector of the form [::enter state] [::exit state] or [::transition t]."}, start {:protocol-inline nil, :meta {:file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 312, :column 7, :end-line 312, :end-column 12, :arglists (quote ([sc]))}, :name com.keminglabs.statetron.core/start, :variadic false, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :end-column 12, :method-params ([sc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 312, :end-line 312, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sc]))}, env {:protocol-inline nil, :meta {:file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 54, :column 7, :end-line 54, :end-column 10, :arglists (quote ([sc])), :doc "A statechart's environment map"}, :name com.keminglabs.statetron.core/env, :variadic false, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :end-column 10, :method-params ([sc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sc])), :doc "A statechart's environment map"}, ->StatechartImpl {:protocol-inline nil, :meta {:file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 47, :column 22, :end-line 47, :end-column 36, :private true, :internal-ctor true, :factory :positional, :arglists (quote ([env active-leaf-names graph state-name->ancestors]))}, :private true, :name com.keminglabs.statetron.core/->StatechartImpl, :variadic false, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :end-column 36, :method-params ([env active-leaf-names graph state-name->ancestors]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 47, :end-line 47, :max-fixed-arity 4, :fn-var true, :arglists (quote ([env active-leaf-names graph state-name->ancestors]))}, expand-default-transitions {:protocol-inline nil, :meta {:file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 321, :column 8, :end-line 321, :end-column 34, :private true, :arglists (quote ([graph]))}, :private true, :name com.keminglabs.statetron.core/expand-default-transitions, :variadic false, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :end-column 34, :method-params ([graph]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 321, :end-line 321, :max-fixed-arity 1, :fn-var true, :arglists (quote ([graph]))}, s {:protocol-inline nil, :meta {:file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 87, :column 7, :end-line 87, :end-column 8, :arglists (quote ([sc state-name]))}, :name com.keminglabs.statetron.core/s, :variadic false, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :end-column 8, :method-params ([sc state-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 87, :end-line 87, :max-fixed-arity 2, :fn-var true, :arglists (quote ([sc state-name]))}, active-leaves {:protocol-inline nil, :meta {:file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 148, :column 7, :end-line 148, :end-column 20, :arglists (quote ([sc]))}, :name com.keminglabs.statetron.core/active-leaves, :variadic false, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :end-column 20, :method-params ([sc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 148, :end-line 148, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sc]))}, descendants {:protocol-inline nil, :meta {:file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 131, :column 7, :end-line 131, :end-column 18, :arglists (quote ([state])), :doc "Seq of state (first) and its descendants."}, :name com.keminglabs.statetron.core/descendants, :variadic false, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :end-column 18, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 131, :end-line 131, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state])), :doc "Seq of state (first) and its descendants."}, regular-default-transition? {:protocol-inline nil, :meta {:file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 417, :column 7, :end-line 417, :end-column 34, :arglists (quote ([t])), :doc "A default transition from a parent to one of its children"}, :name com.keminglabs.statetron.core/regular-default-transition?, :variadic false, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :end-column 34, :method-params ([t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 417, :end-line 417, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t])), :doc "A default transition from a parent to one of its children"}, ancestors {:protocol-inline nil, :meta {:file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 118, :column 7, :end-line 118, :end-column 16, :arglists (quote ([state] [sc state-name])), :doc "Seq of state (first) and its ancestors. Two-arity is faster.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([state] [sc state-name]), :arglists ([state] [sc state-name]), :arglists-meta (nil nil)}}, :name com.keminglabs.statetron.core/ancestors, :variadic false, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([state] [sc state-name]), :arglists ([state] [sc state-name]), :arglists-meta (nil nil)}, :method-params ([state] [sc state-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 2, :fn-var true, :arglists ([state] [sc state-name]), :doc "Seq of state (first) and its ancestors. Two-arity is faster."}, explain-duplicate-transitions {:protocol-inline nil, :meta {:file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 366, :column 8, :end-line 366, :end-column 37, :private true, :arglists (quote ([graph]))}, :private true, :name com.keminglabs.statetron.core/explain-duplicate-transitions, :variadic false, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :end-column 37, :method-params ([graph]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 366, :end-line 366, :max-fixed-arity 1, :fn-var true, :arglists (quote ([graph]))}, active-states {:protocol-inline nil, :meta {:file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 158, :column 7, :end-line 158, :end-column 20, :arglists (quote ([sc]))}, :name com.keminglabs.statetron.core/active-states, :variadic false, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :end-column 20, :method-params ([sc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 158, :end-line 158, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sc]))}, StatechartImpl {:private true, :num-fields 4, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name com.keminglabs.statetron.core/StatechartImpl, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :end-column 36, :type true, :column 22, :internal-ctor true, :line 47, :record true, :end-line 47, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, explain-bad-default-transition {:protocol-inline nil, :meta {:file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 339, :column 8, :end-line 339, :end-column 38, :private true, :arglists (quote ([graph]))}, :private true, :name com.keminglabs.statetron.core/explain-bad-default-transition, :variadic false, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :end-column 38, :method-params ([graph]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 339, :end-line 339, :max-fixed-arity 1, :fn-var true, :arglists (quote ([graph]))}, explain-root-must-have-default-transition {:protocol-inline nil, :meta {:file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 360, :column 8, :end-line 360, :end-column 49, :private true, :arglists (quote ([graph]))}, :private true, :name com.keminglabs.statetron.core/explain-root-must-have-default-transition, :variadic false, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :end-column 49, :method-params ([graph]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 360, :end-line 360, :max-fixed-arity 1, :fn-var true, :arglists (quote ([graph]))}, internal-transition? {:protocol-inline nil, :meta {:file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 424, :column 7, :end-line 424, :end-column 27, :arglists (quote ([t]))}, :name com.keminglabs.statetron.core/internal-transition?, :variadic false, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :end-column 27, :method-params ([t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 424, :end-line 424, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t]))}, error {:protocol-inline nil, :meta {:file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :line 14, :column 7, :end-line 14, :end-column 12, :arglists (quote ([msg]))}, :name com.keminglabs.statetron.core/error, :variadic false, :file "/Users/woot15/Desktop/Dropbox/My_Projects/20171218_PlantGame/plantgame/plantboss/vendor/statetron/src/com/keminglabs/statetron/core.cljc", :end-column 12, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg]))}}, :cljs.spec/registry-ref [], :require-macros {com.keminglabs.statetron.macros com.keminglabs.statetron.macros, com.keminglabs.statetron.core com.keminglabs.statetron.core, -> lonocloud.synthread, lonocloud.synthread lonocloud.synthread, tufte taoensso.tufte, taoensso.tufte taoensso.tufte}, :cljs.analyzer/constants {:seen #{:state/name :find get-else state-name->ancestors :db.unique/identity :where :db/unique :state/_children active-leaf-names ?to-name :choice/fn ?choice :com.keminglabs.statetron.core/enter :com.keminglabs.statetron.core/root :else :com.keminglabs.statetron.core/start ?to :db/valueType :db.type/ref ?t-out :com.keminglabs.statetron.core/transition ?transition-name :com.keminglabs.statetron.core/guard :steps :com.keminglabs.statetron.core/exit :history :transition/_from not= ?from-name :env _ :state/start? ?from ?s :transition/to :event :com.keminglabs.statetron.core/internal ?to-state-name :transition/_to :com.keminglabs.statetron.core/default :state/children $ :transition/guard :transition/name env ?t1 :db.fn/retractAttribute :state/exit :graph ?parent :db/cardinality :db/id :event/name :sc ?t2 :transition/from missing? :state-name->ancestors :db.cardinality/many graph :transition/action :active-leaf-names ?t ?e ?name :in :guard-result :state/enter}, :order [:state/children :state/name :transition/from :transition/to :db/cardinality :db/valueType :db.cardinality/many :db.type/ref :db/unique :db.unique/identity :com.keminglabs.statetron.core/root :env :active-leaf-names :graph :state-name->ancestors env active-leaf-names graph state-name->ancestors :find ?e :where _ :transition/name :state/_children :in ?t $ ?transition-name ?from-name ?from missing? ?to-name ?to :com.keminglabs.statetron.core/default :transition/_from :state/enter :state/exit :transition/action :com.keminglabs.statetron.core/start :event/name :transition/guard :sc :com.keminglabs.statetron.core/guard :steps :com.keminglabs.statetron.core/enter :com.keminglabs.statetron.core/exit :else :guard-result :com.keminglabs.statetron.core/transition :choice/fn ?t-out ?choice ?to-state-name :db/id :db.fn/retractAttribute :state/start? :transition/_to ?name ?t1 ?t2 not= get-else :com.keminglabs.statetron.core/internal ?s ?parent :history :event]}, :doc nil}