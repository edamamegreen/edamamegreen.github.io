{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name expound.paths, :imports nil, :requires {s cljs.spec.alpha, cljs.spec.alpha cljs.spec.alpha, clojure.spec.alpha cljs.spec.alpha}, :cljs.spec/speced-vars [expound.paths/prefix-path? expound.paths/kvps-path? expound.paths/kps-path?], :uses nil, :defs {map->KeyPathSegment {:protocol-inline nil, :meta {:file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :line 10, :column 12, :end-line 10, :end-column 26, :internal-ctor true, :factory :map, :arglists (quote ([G__44273]))}, :name expound.paths/map->KeyPathSegment, :variadic false, :file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :end-column 26, :method-params ([G__44273]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__44273]))}, in-with-kps {:protocol-inline nil, :meta {:file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :line 160, :column 7, :end-line 160, :end-column 18, :arglists (quote ([form val in in']))}, :name expound.paths/in-with-kps, :variadic false, :file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :end-column 18, :method-params ([form val in in']), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 160, :end-line 160, :max-fixed-arity 4, :fn-var true, :arglists (quote ([form val in in']))}, KeyPathSegment {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name expound.paths/KeyPathSegment, :file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :end-column 26, :type true, :column 12, :internal-ctor true, :line 10, :record true, :end-line 10, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->KeyValuePathSegment {:protocol-inline nil, :meta {:file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :line 12, :column 12, :end-line 12, :end-column 31, :internal-ctor true, :factory :positional, :arglists (quote ([idx]))}, :name expound.paths/->KeyValuePathSegment, :variadic false, :file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :end-column 31, :method-params ([idx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([idx]))}, kvps? {:protocol-inline nil, :meta {:file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :line 19, :column 7, :end-line 19, :end-column 12, :arglists (quote ([x]))}, :name expound.paths/kvps?, :variadic false, :file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, ->KeyPathSegment {:protocol-inline nil, :meta {:file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :line 10, :column 12, :end-line 10, :end-column 26, :internal-ctor true, :factory :positional, :arglists (quote ([key]))}, :name expound.paths/->KeyPathSegment, :variadic false, :file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :end-column 26, :method-params ([key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([key]))}, in-with-kps-ints-are-keys {:protocol-inline nil, :meta {:file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :line 105, :column 7, :end-line 105, :end-column 32, :arglists (quote ([form val in in']))}, :name expound.paths/in-with-kps-ints-are-keys, :variadic false, :file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :end-column 32, :method-params ([form val in in']), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 105, :end-line 105, :max-fixed-arity 4, :fn-var true, :arglists (quote ([form val in in']))}, compare-path-segment {:protocol-inline nil, :meta {:file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :line 169, :column 7, :end-line 169, :end-column 27, :arglists (quote ([x y]))}, :name expound.paths/compare-path-segment, :variadic false, :file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :end-column 27, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 169, :end-line 169, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, kvps-path? {:protocol-inline nil, :meta {:file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :line 46, :column 7, :end-line 46, :end-column 17, :arglists (quote ([x])), :doc "True if path points to a key/value pair"}, :name expound.paths/kvps-path?, :variadic false, :file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "True if path points to a key/value pair"}, KeyValuePathSegment {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name expound.paths/KeyValuePathSegment, :file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :end-column 31, :type true, :column 12, :internal-ctor true, :line 12, :record true, :end-line 12, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, compare-paths {:protocol-inline nil, :meta {:file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :line 189, :column 7, :end-line 189, :end-column 20, :arglists (quote ([path1 path2]))}, :name expound.paths/compare-paths, :variadic false, :file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :end-column 20, :method-params ([path1 path2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 189, :end-line 189, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path1 path2]))}, in-with-kps-fuzzy-match-for-regex-failures {:protocol-inline nil, :meta {:file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :line 81, :column 7, :end-line 81, :end-column 49, :arglists (quote ([form val in in']))}, :name expound.paths/in-with-kps-fuzzy-match-for-regex-failures, :variadic false, :file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :end-column 49, :method-params ([form val in in']), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 4, :fn-var true, :arglists (quote ([form val in in']))}, map->KeyValuePathSegment {:protocol-inline nil, :meta {:file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :line 12, :column 12, :end-line 12, :end-column 31, :internal-ctor true, :factory :map, :arglists (quote ([G__44282]))}, :name expound.paths/map->KeyValuePathSegment, :variadic false, :file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :end-column 31, :method-params ([G__44282]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__44282]))}, in-with-kps* {:protocol-inline nil, :meta {:file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :line 145, :column 7, :end-line 145, :end-column 19, :arglists (quote ([form val in in']))}, :name expound.paths/in-with-kps*, :variadic false, :file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :end-column 19, :method-params ([form val in in']), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 145, :end-line 145, :max-fixed-arity 4, :fn-var true, :arglists (quote ([form val in in']))}, kps-path? {:protocol-inline nil, :meta {:file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :line 37, :column 7, :end-line 37, :end-column 16, :arglists (quote ([x])), :doc "True if path points to a key"}, :name expound.paths/kps-path?, :variadic false, :file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "True if path points to a key"}, in-with-kps-maps-as-seqs {:protocol-inline nil, :meta {:file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :line 54, :column 7, :end-line 54, :end-column 31, :arglists (quote ([form val in in']))}, :name expound.paths/in-with-kps-maps-as-seqs, :variadic false, :file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :end-column 31, :method-params ([form val in in']), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 4, :fn-var true, :arglists (quote ([form val in in']))}, prefix-path? {:protocol-inline nil, :meta {:file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :line 27, :column 7, :end-line 27, :end-column 19, :arglists (quote ([partial-path full-path])), :doc "True if partial-path is a prefix of full-path."}, :name expound.paths/prefix-path?, :variadic false, :file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :end-column 19, :method-params ([partial-path full-path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 2, :fn-var true, :arglists (quote ([partial-path full-path])), :doc "True if partial-path is a prefix of full-path."}, in-with-kps-ints-are-key-value-indicators {:protocol-inline nil, :meta {:file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :line 123, :column 7, :end-line 123, :end-column 48, :arglists (quote ([form val in in']))}, :name expound.paths/in-with-kps-ints-are-key-value-indicators, :variadic false, :file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :end-column 48, :method-params ([form val in in']), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 123, :end-line 123, :max-fixed-arity 4, :fn-var true, :arglists (quote ([form val in in']))}, kps? {:protocol-inline nil, :meta {:file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :line 16, :column 7, :end-line 16, :end-column 11, :arglists (quote ([x]))}, :name expound.paths/kps?, :variadic false, :file "file:/Users/woot15/.m2/repository/expound/expound/0.3.1/expound-0.3.1.jar!/expound/paths.cljc", :end-column 11, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}}, :cljs.spec/registry-ref [[expound.paths/prefix-path? (cljs.spec.alpha/fspec :args (s/cat :partial-path :expound/path :partial-path :expound/path) :ret cljs.core/boolean?)] [expound.paths/kps-path? (cljs.spec.alpha/fspec :args (s/cat :x cljs.core/any?) :ret cljs.core/boolean?)] [expound.paths/kvps-path? (cljs.spec.alpha/fspec :args (s/cat :x cljs.core/any?) :ret cljs.core/boolean?)]], :require-macros nil, :cljs.analyzer/constants {:seen #{idx :args cljs.core/boolean? :ret cljs.core/sequential? expound.paths/prefix-path? :key :else :in' expound.paths/kvps-path? cljs.spec.alpha/fspec :val key :expound/path :x :form :idx s/cat :partial-path :expound.paths/not-found expound.paths/kps-path? cljs.core/any? :in}, :order [:expound/path cljs.core/sequential? :key key :idx idx expound.paths/prefix-path? cljs.spec.alpha/fspec :args s/cat :partial-path :ret cljs.core/boolean? expound.paths/kps-path? :x cljs.core/any? expound.paths/kvps-path? :expound.paths/not-found :else :form :val :in :in']}, :doc nil}